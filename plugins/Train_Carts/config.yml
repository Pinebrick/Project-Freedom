#> This is the configuration file of TrainCarts
#> In here you can tweak TrainCarts to what you want
#> For more information, you can visit the following websites:
#> https://wiki.traincarts.net/p/TrainCarts
#> https://www.spigotmc.org/resources/traincarts.39592/

# Path or online download URL to the resource pack to use
# Using 'server' makes it use server.properties (default)
# Using 'default' or empty makes it use no resource pack at all
resourcePack: server

# Properties of the link between the carts of a train
linkProperties:
  # The distance between two carts in a train
  cartDistanceGap: 0.5
  # The distance between two carts above which they lose linkage and disconnect
  cartDistanceGapMax: 2.5
  # Factor at which the gap is maintained, based on train velocity
  cartDistanceForcer: 0.1
  # Factor at which the gap is maintained, always active
  # When set to nonzero, will cause carts to move at standstill
  cartDistanceForcerConstant: 0.0

# What distance beyond the world border carts get destroyed automatically
# This covers a set world border, as well as falling into the void, or
# flying beyond the height limit of the World
worldBorderKillDistance: 64.0

# Whether or not the combined carts (powered/storage minecarts) break up into two items
breakCombinedCarts: false

# A performance boost to give to powered minecarts (0 = normal speed)
poweredCartBoost: 0.1

# The boosting factor of powered rails (default = 0.06)
poweredRailBoost: 0.06

# The maximum velocity (blocks/tick) a minecart can possibly have set
maxVelocity: 5.0

# The multiplier used to slow down minecarts
# Normal is the default, slow is when the minecart is meant to slow down.
slowDownMultiplier:
  normal: 0.997
  slow: 0.96

# The maximum allowed enter radius for enter signs
maxEnterDistance: 50.0

# The maximum allowed ejection distance for eject signs
maxEjectDistance: 10.0

# Maximum distance from which /train edit can select trains
maxTrainEditdistance: 64.0

# The amount of velocity stations give when launching trains
launchForce: 10.0

# Allows players to push carts with PUSH/KILL/etc. collision modes
# when pushing from behind. When true, they can make a standing-still
# cart move by pushing it, even when collision is disallowed otherwise.
# When the cart hits a player head-on, then the logic IS executed like normal
allowPlayerCollisionFromBehind: false

# Destroys all existing minecarts on startup and shutdown of the plugin
destroyAllOnShutdown: false

# Settings used when carts collide with entities
collision:
  # If train owners are ignored
  ignoreOwners: false
  # If global train owners are ignored
  ignoreGlobalOwners: false
  # The amount of force at which minecarts push away others
  pushAwayForce: 0.2

# Whether or not all minecarts spawned on the server turn into TrainCarts' Minecarts
# Note that the TrainCart placement permission is then no longer active
allMinecartsAreTrainCarts: false

# Whether or not powered minecarts obtain their coal from attached storage minecarts
useCoalFromStorageCart: false

# Whether or not the player that places a minecart is set owner
setOwnerOnPlacement: true

# What style of launching to use in stations and launcher sign systems by default. Possible values:
# - 'linear': gradually switches from one motion speed to another at a linear rate
# - 'bezier': uses a bezier curve (ease in-out), resulting in slower changes in motion at start/end of launch
launchFunction: bezier

# Whether or not chunks are only kept loaded when the train is moving
# They also keep chunks loaded while the train is waiting on a station
keepChunksLoadedOnlyWhenMoving: false

# Maximum radius that can be set for the keep chunks loaded property of a train
# The default is radius is 2, which loads a 5x5 chunk area. Avoid abuse, don't make it too big.
maxKeepChunksLoadedRadius: 7

# Whether to enable or cancel collisions with blocks above minecarts
# Some constructions depend on these block collisions to block minecarts
# If these collisions are unwanted, they can be turned off here
enableCeilingBlockCollision: true

# Sets whether attachment animations use tick time or wall clock time
# When false, wall clock time is used, and server lag will not slow down/speed up animations
# When true, tick time is used, and server lag will cause speed changes. Animations do stay in sync with physics
animationsUseTickTime: false

# Sets whether the player can move around by holding shift in the attachment editor
enableSneakingInAttachmentEditor: false

# Sets the interval at which all the properties of all trains on the server are saved to disk
# This saving may have a negative performance impact, as seen in the AutoSaveTask in timings
# If you do not worry about preserving this information, you can raise this interval
# A manual save can be performed using /train saveall
autoSaveInterval: 600

# Sets whether players automatically claim new saved trains that they save
# Once claimed, other players cannot overwrite the saved train, effectively protecting it
# Setting this to false will have new trains exist in public domain, and anyone can modify it
# The original owner can put the train in public domain by disclaiming it (/savedtrain [name] disclaim)
# Players (moderators) with the train.command.savedtrain.global permission are exempt
claimNewSavedTrains: true

# Sets whether players automatically claim new saved attachment models that they save
# Once claimed, other players cannot overwrite the saved model, effectively protecting it
# Setting this to false will have new models exist in public domain, and anyone can modify it
# The original owner can put the model in public domain by disclaiming it (/train model config [name] disclaim)
# Players (moderators) with the train.command.savedtrain.global permission are exempt
claimNewSavedModels: true

# The hastebin server which is used to upload saved trains
# This will be used when using the /savedtrain [name] paste command
hastebinServer: https://paste.traincarts.net

# Enable or disable seeing yourself in third-person when upside-down or vertical
# Turning this off will cause players to clip through the cart potentially
# This option is only active when FPV (First person view) is set to DYNAMIC
# In that case, such seats will behave as if FPV is set to DEFAULT
enableSeatThirdPersonView: false

# The maximum length a detector region (between two detectors) can be
maxDetectorLength: 2000

# The maximum size a dimension of a mutex zone is allowed to have
# Too large mutexes could result in an out-of-memory situation
maxMutexSize: 2000

# The maximum amount of minecart items that can be stacked in one item
maxMinecartStackSize: 64

# The maximum radius chest/furnace sign systems look for the needed blocks
maxTransferRadius: 5

# The default radius chest/furnace sign systems look for the needed blocks
defaultTransferRadius: 2

# Whether or not empty minecarts slow down faster than occupied minecarts
slowDownEmptyCarts: false

# Whether furnace minecarts get fuel when launching from stations
refillAtStations: true

# Whether destroying or entering minecarts is made easier to do
# When optimized, block / air clicks are intercepted and handled as clicks with minecarts instead
optimizeInteraction: true

# Whether block activation during movement is skipped when the rail type does not support it
# When optimized, pressure plates near (but not on) the track are not activated
# Rails that are activated, like detector rails, will function just fine
# This optimization helps improve performance of train movement physics, potentially improving tps
optimizeBlockActivation: true

# When set to true, players will be able to break minecarts with a single slap
# 
# No item drops are spawned for minecarts destroyed this way. Minecart contents ARE dropped.
# They can still select minecarts by crouching and then slapping the minecart
# 
# When set to false, players will never instantly destroy minecarts and they will have to break it as if in survival.
instantCreativeDestroy: true

# Whether upside-down rail functionality is enabled on the server
# When disabled, minecarts can not be rotated upside-down
allowUpsideDownRails: true

# Whether to enable WorldEdit schematics to be loaded in as a SCHEMATIC attachment
# This can be quite laggy, so only enable it if you can trust people with it
# Only works on Minecraft server/clients 1.19.4 and later
allowSchematicAttachment: true

# Before TrainCarts v1.12.2-v1 speed limiting was done on each individual axis
# This had a big impact on air physics, because it never made a good ellipse fall
# This was changed to preserving the motion vector direction when doing speed limiting
# Slight changes may have occurred in curves, slopes and through-air physics
# To restore the old limiting system, set this option to True
legacySpeedLimiting: false

# Whether players (with build permissions) can edit existing rails by right-clicking on them
allowRailEditing: true

# Velocity factor to apply when a player tries to move a cart using movement controls
manualMovementFactor: 0.1

# The currency Ticket signs will display in messages, %value% represents the displayed value
currencyFormat: '%value% Dollars'

# Whether trains can be teleported to the nether (or back) when rails are laid close to the portals
allowNetherTeleport: true

# The delay (in ticks) between ejecting and re-entering by collision (e.g. mobs auto-entering carts)
collisionReEnterDelay: 100

# Logs a message to server log when two trains are inside a mutex zone, when they shouldn't be
logMutexConflicts: false

# Logs detailed messages whenever a train splits apart because of issues finding a path between carts
logTrainSplitting: false

# Logs when TrainCarts sync-loads another chunk while not expected to, like while handling a chunk load
# This is mostly for developers to diagnose performance issues. Sync chunk loads can, potentially, hurt server TPS
logSyncChunkLoads: false

# Configures the in-memory rail information cache of TrainCarts
cache:
  # For how many ticks the cached information is accessed without verification
  # With 0 ticks, the information is verified every tick, reading world block data doing so
  # Higher values will verify less often, possibly improving performance, but this
  # may cause stale information to remain in the cache. This may cause 'ghost rails'.
  verificationTicks: 0
  # After this number of ticks beyond the verification ticks the cached information is deleted
  # Higher values can reduce lookups but this comes at the cost of higher memory consumption
  expireTicks: 20

# The block materials that can be broken using minecarts
# Players with the admin block break permission can use any type
# Others have to use one from this list
allowedBlockBreakTypes: []
# Whether powered activator rails eject players inside Minecarts (Vanilla)
# If activator rails are used for decoration purposes, this should be disabled
activatorEjectEnabled: true

# A list of world names where TrainCarts should be enabled
# If this list is empty, all worlds are enabled except those listed in disabledWorlds
# World names are not case-sensitive
enabledWorlds: []

# A list of world names where TrainCarts should be disabled
# Overridden by enabledWorlds
# World names are not case-sensitive
disabledWorlds: []

# Whether or not to show item animations when transferring items
showTransferAnimations: true

# Whether a crafting table must exist when crafting items inside a storage minecart
# When this is set to false and no crafting table is nearby, no item transfer animations are shown
craftingRequireWorkbench: true

# Time format used by trigger signs to display arrival times on signs
# Formatting: https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html
triggerTimerDateFormat: HH:mm:ss

# Several shortcuts you can use on announce signs (text is replaced)
messageShortcuts: {}

# Several shortcuts you can use on switcher and detector signs (text is replaced)
statementShortcuts: {}

# Several shortcuts you can use on signs to set the items
itemShortcuts:
  fuel: oak_planks;spruce_planks;birch_planks;jungle_planks;acacia_planks;cherry_planks;dark_oak_planks;mangrove_planks;bamboo_planks;bamboo_mosaic;oak_sapling;spruce_sapling;birch_sapling;jungle_sapling;acacia_sapling;cherry_sapling;dark_oak_sapling;mangrove_propagule;coal_block;oak_log;spruce_log;birch_log;jungle_log;acacia_log;cherry_log;dark_oak_log;mangrove_log;mangrove_roots;bamboo_block;stripped_oak_log;stripped_spruce_log;stripped_birch_log;stripped_jungle_log;stripped_acacia_log;stripped_cherry_log;stripped_dark_oak_log;stripped_mangrove_log;stripped_oak_wood;stripped_spruce_wood;stripped_birch_wood;stripped_jungle_wood;stripped_acacia_wood;stripped_cherry_wood;stripped_dark_oak_wood;stripped_mangrove_wood;stripped_bamboo_block;oak_wood;spruce_wood;birch_wood;jungle_wood;acacia_wood;cherry_wood;dark_oak_wood;mangrove_wood;azalea;flowering_azalea;dead_bush;white_wool;orange_wool;magenta_wool;light_blue_wool;yellow_wool;lime_wool;pink_wool;gray_wool;light_gray_wool;cyan_wool;purple_wool;blue_wool;brown_wool;green_wool;red_wool;black_wool;bamboo;oak_slab;spruce_slab;birch_slab;jungle_slab;acacia_slab;cherry_slab;dark_oak_slab;mangrove_slab;bamboo_slab;bamboo_mosaic_slab;bookshelf;chiseled_bookshelf;chest;crafting_table;ladder;jukebox;oak_fence;spruce_fence;birch_fence;jungle_fence;acacia_fence;cherry_fence;dark_oak_fence;mangrove_fence;bamboo_fence;oak_stairs;spruce_stairs;birch_stairs;jungle_stairs;acacia_stairs;cherry_stairs;dark_oak_stairs;mangrove_stairs;bamboo_stairs;bamboo_mosaic_stairs;white_carpet;orange_carpet;magenta_carpet;light_blue_carpet;yellow_carpet;lime_carpet;pink_carpet;gray_carpet;light_gray_carpet;cyan_carpet;purple_carpet;blue_carpet;brown_carpet;green_carpet;red_carpet;black_carpet;scaffolding;lectern;daylight_detector;trapped_chest;note_block;oak_button;spruce_button;birch_button;jungle_button;acacia_button;cherry_button;dark_oak_button;mangrove_button;bamboo_button;oak_pressure_plate;spruce_pressure_plate;birch_pressure_plate;jungle_pressure_plate;acacia_pressure_plate;cherry_pressure_plate;dark_oak_pressure_plate;mangrove_pressure_plate;bamboo_pressure_plate;oak_door;spruce_door;birch_door;jungle_door;acacia_door;cherry_door;dark_oak_door;mangrove_door;bamboo_door;oak_trapdoor;spruce_trapdoor;birch_trapdoor;jungle_trapdoor;acacia_trapdoor;cherry_trapdoor;dark_oak_trapdoor;mangrove_trapdoor;bamboo_trapdoor;oak_fence_gate;spruce_fence_gate;birch_fence_gate;jungle_fence_gate;acacia_fence_gate;cherry_fence_gate;dark_oak_fence_gate;mangrove_fence_gate;bamboo_fence_gate;oak_boat;oak_chest_boat;spruce_boat;spruce_chest_boat;birch_boat;birch_chest_boat;jungle_boat;jungle_chest_boat;acacia_boat;acacia_chest_boat;cherry_boat;cherry_chest_boat;dark_oak_boat;dark_oak_chest_boat;mangrove_boat;mangrove_chest_boat;bamboo_raft;bamboo_chest_raft;bow;coal;charcoal;wooden_sword;wooden_shovel;wooden_pickaxe;wooden_axe;wooden_hoe;stick;bowl;oak_sign;spruce_sign;birch_sign;jungle_sign;acacia_sign;cherry_sign;dark_oak_sign;mangrove_sign;bamboo_sign;oak_hanging_sign;spruce_hanging_sign;birch_hanging_sign;jungle_hanging_sign;acacia_hanging_sign;cherry_hanging_sign;dark_oak_hanging_sign;mangrove_hanging_sign;bamboo_hanging_sign;lava_bucket;dried_kelp_block;fishing_rod;blaze_rod;white_banner;orange_banner;magenta_banner;light_blue_banner;yellow_banner;lime_banner;pink_banner;gray_banner;light_gray_banner;cyan_banner;purple_banner;blue_banner;brown_banner;green_banner;red_banner;black_banner;crossbow;loom;composter;barrel;cartography_table;fletching_table;smithing_table;oak_wall_sign;spruce_wall_sign;birch_wall_sign;acacia_wall_sign;cherry_wall_sign;jungle_wall_sign;dark_oak_wall_sign;mangrove_wall_sign;bamboo_wall_sign;oak_wall_hanging_sign;spruce_wall_hanging_sign;birch_wall_hanging_sign;acacia_wall_hanging_sign;cherry_wall_hanging_sign;jungle_wall_hanging_sign;dark_oak_wall_hanging_sign;mangrove_wall_hanging_sign;bamboo_wall_hanging_sign;white_wall_banner;orange_wall_banner;magenta_wall_banner;light_blue_wall_banner;yellow_wall_banner;lime_wall_banner;pink_wall_banner;gray_wall_banner;light_gray_wall_banner;cyan_wall_banner;purple_wall_banner;blue_wall_banner;brown_wall_banner;green_wall_banner;red_wall_banner;black_wall_banner
  heatable: stone;cobbled_deepslate;cobblestone;sand;red_sand;coal_ore;deepslate_coal_ore;iron_ore;deepslate_iron_ore;copper_ore;deepslate_copper_ore;gold_ore;deepslate_gold_ore;redstone_ore;deepslate_redstone_ore;emerald_ore;deepslate_emerald_ore;lapis_ore;deepslate_lapis_ore;diamond_ore;deepslate_diamond_ore;nether_gold_ore;nether_quartz_ore;ancient_debris;oak_log;spruce_log;birch_log;jungle_log;acacia_log;cherry_log;dark_oak_log;mangrove_log;stripped_oak_log;stripped_spruce_log;stripped_birch_log;stripped_jungle_log;stripped_acacia_log;stripped_cherry_log;stripped_dark_oak_log;stripped_mangrove_log;stripped_oak_wood;stripped_spruce_wood;stripped_birch_wood;stripped_jungle_wood;stripped_acacia_wood;stripped_cherry_wood;stripped_dark_oak_wood;stripped_mangrove_wood;oak_wood;spruce_wood;birch_wood;jungle_wood;acacia_wood;cherry_wood;dark_oak_wood;mangrove_wood;wet_sponge;sandstone;sea_pickle;kelp;cactus;clay;netherrack;basalt;stone_bricks;deepslate_bricks;deepslate_tiles;nether_bricks;quartz_block;white_terracotta;orange_terracotta;magenta_terracotta;light_blue_terracotta;yellow_terracotta;lime_terracotta;pink_terracotta;gray_terracotta;light_gray_terracotta;cyan_terracotta;purple_terracotta;blue_terracotta;brown_terracotta;green_terracotta;red_terracotta;black_terracotta;red_sandstone;raw_iron;raw_copper;raw_gold;golden_sword;golden_shovel;golden_pickaxe;golden_axe;golden_hoe;iron_sword;iron_shovel;iron_pickaxe;iron_axe;iron_hoe;chainmail_helmet;chainmail_chestplate;chainmail_leggings;chainmail_boots;iron_helmet;iron_chestplate;iron_leggings;iron_boots;golden_helmet;golden_chestplate;golden_leggings;golden_boots;porkchop;clay_ball;cod;salmon;beef;chicken;potato;rabbit;iron_horse_armor;golden_horse_armor;mutton;chorus_fruit;polished_blackstone_bricks
  armor: legacy_chainmail_leggings;legacy_diamond_chestplate;legacy_leather_leggings;iron_chestplate;chainmail_chestplate;turtle_helmet;legacy_chainmail_helmet;netherite_chestplate;leather_leggings;golden_boots;chainmail_boots;leather_boots;golden_helmet;legacy_leather_chestplate;legacy_gold_boots;iron_boots;legacy_gold_helmet;diamond_boots;netherite_helmet;diamond_leggings;netherite_boots;legacy_leather_boots;legacy_chainmail_chestplate;legacy_chainmail_boots;legacy_iron_boots;leather_chestplate;legacy_leather_helmet;chainmail_leggings;legacy_gold_leggings;chainmail_helmet;iron_helmet;diamond_helmet;legacy_gold_chestplate;netherite_leggings;leather_helmet;diamond_chestplate;legacy_iron_leggings;legacy_diamond_helmet;legacy_iron_chestplate;iron_leggings;golden_leggings;legacy_diamond_leggings;golden_chestplate;legacy_diamond_boots;legacy_iron_helmet
  sword: wooden_sword;stone_sword;iron_sword;golden_sword;iron_sword;diamond_sword;legacy_wood_sword;legacy_stone_sword;legacy_iron_sword;legacy_gold_sword;legacy_iron_sword;legacy_diamond_sword;netherite_sword
  boots: leather_boots;iron_boots;golden_boots;diamond_boots;chainmail_boots;legacy_leather_boots;legacy_iron_boots;legacy_gold_boots;legacy_diamond_boots;legacy_chainmail_boots;netherite_boots
  leggings: leather_leggings;iron_leggings;golden_leggings;diamond_leggings;chainmail_leggings;legacy_leather_leggings;legacy_iron_leggings;legacy_gold_leggings;legacy_diamond_leggings;legacy_chainmail_leggings;netherite_leggings
  chestplate: leather_chestplate;iron_chestplate;golden_chestplate;diamond_chestplate;chainmail_chestplate;legacy_leather_chestplate;legacy_iron_chestplate;legacy_gold_chestplate;legacy_diamond_chestplate;legacy_chainmail_chestplate;netherite_chestplate
  helmet: leather_helmet;iron_helmet;golden_helmet;diamond_helmet;chainmail_helmet;turtle_helmet;legacy_leather_helmet;legacy_iron_helmet;legacy_gold_helmet;legacy_diamond_helmet;legacy_chainmail_helmet;netherite_helmet

# Parse signs made in Minecraft 1.7 and before without re-creating
parseOldSigns: false

# Enables parsing signs with (train), as well as [train]
# This makes it easier to write signs with a Mac keyboard layout
parseParentheses: true

# Sets whether switcher signs must be redstone-powered to switch track using pathfinding logic
# If true, then signs must be redstone-powered or use [+train] to do pathfinding
# If false, then signs will also switch track using pathfinding when not powered
# Default is true, which allows for [-train] switcher signs to properly detect trains
onlyPoweredSwitchersDoPathFinding: true

# Sets whether switchers must have the last two lines on the sign empty, for it to switch
# track using pathfinding logic
# If true, then statements on switcher signs will disable the pathfinding functionality
# If false, then statements on switcher signs complement the pathfinding functionality
# Default is false, which allows pathfinding to be a fallback case
onlyEmptySwitchersDoPathFinding: false

# When enabled, re-calculates all path finding routes on plugin startup
rerouteOnStartup: false

# Sets the maximum amount of time (in milliseconds) to spend, per tick,
# calculating train routing information. (/train reroute, reroute debug stick)
# Raising this can make computations go faster at the cost of server TPS
pathFindingMaxProcessingPerTick: 30

# For [cart] signs that use counter statements, specifies whether
# counters reset on the first cart of the train
switcherResetCountersOnFirstCart: true

# Whether trains only activate signs that they can 'see'. This means the text-side of the sign faces
# the train, or either side does to trigger in either direction. When disabled, trains will instead always
# activate signs. In both cases the behavior can be controlled with a :direction rule on the first line of the sign
trainsCheckSignFacing: true

# Default attachment animations that can be applied to the base of all trains
defaultAnimations:
  rotate:
    nodes:
      - t=0.25
      - t=0.25 yaw=90.0
      - t=0.25 yaw=180.0
      - t=0.25 yaw=270.0
      - t=0.0 yaw=360.0
  roll:
    nodes:
      - t=0.25
      - t=0.25 roll=90.0
      - t=0.25 roll=180.0
      - t=0.25 roll=270.0
      - t=0.0 roll=360.0
  pitch:
    nodes:
      - t=0.25
      - t=0.25 pitch=90.0
      - t=0.25 pitch=180.0
      - t=0.25 pitch=270.0
      - t=0.0 pitch=360.0

# Whether ticket background images can be loaded outside of
# the 'plugins/Train_Carts/images' subdirectory. Enabling this may
# allow players to view private server data!
allowExternalTicketImagePaths: false

# Configures the different sound effects used in traincarts globally
sounds:
  # Enable/disable hiss sound played when trains stop at stations
  hissWhenStopAtStation: true
  # Enable/disable hiss sound played when carts are destroyed by a destroy sign
  hissWhenDestroyedBySign: true
  # Enable/disable hiss sound played when a cart is removed from a train (destroyed/unlinked)
  playHissWhenCartRemoved: true
  # Enable/disable hiss sound played when two carts connect together
  hissWhenLinked: true

# Whether any block supporting things underneath can hold upside-down rails
# If true, blocks like glass and barrier blocks can hold upside-down rails
# If false, only fully-solid blocks can hold them
upsideDownSupportedByAll: true

# How many threads are used to update attachment positions
# Multi-core CPU servers can benefit from higher parallelism
# If only a single core is available, using 1 is recommended to avoid overhead
# The default, 'auto' or -1, will detect the number of CPU cores and use that
attachmentTransformParallelism: -1

# When trains that keep chunks loaded around them derail, they can end up
# flying off into nowhere. This results in thousands of chunks being generated,
# with no clear indication other than server performance tanking. To combat this,
# carts that derail and move this distance threshold away while derailed, automatically
# unload (by setting keep chunks loaded to false again). A warning with details is logged.
unloadRunawayTrainDistance: 160.0

# Maximum number of expanded values resulting from the @train and @ptrain selectors players can use
# If more than this amount is expanded then an error is sent and no commands are executed
# This limit avoids players being able to freeze the server or crash players with large expressions
# Players need permission 'train.command.selector.use' to use selectors at all
# Players with permission 'train.command.selector.unlimited' are not subjected to this limit
maxCommandSelectorValues: 128

# Maximum number of times a single Effect Loop can play concurrently
# This limit prevents the server running out of resources if some infinite cycle occurs
# This is not a GLOBAL limit, but one that applies per 'unique' configurable effect loop
# If set to -1 there will be no limit, but this could be dangerous
maxConcurrentEffectLoops: 20

# Cooldown in seconds between spawn sign spawns
# Spawns are skipped/cancelled when spawning faster than this
# A value of -1 disables this cooldown (default)
spawnSignCooldown: -1.0

# Limits of the amount of carts on the server
cartLimits:
  # Maximum number of TrainCarts minecarts allowed per world
  # If there are more than this number, no more minecarts can be placed/spawned
  # A value of -1 disables this limit (default)
  maxCartsPerWorld: -1

  # Whether to include unloaded trains/carts in the maxCartsPerWorld limit
  countUnloaded: false
  # Maximum number of carts that can be joined together in a train
  # Linking does not happen when it would exceed this limit,
  # and trains longer than this cannot be spawned
  # A value of -1 disables this limit, allowing any length (default)
  maxCartsPerTrain: -1
